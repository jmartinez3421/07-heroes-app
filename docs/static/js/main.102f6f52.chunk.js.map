{"version":3,"sources":["auth/AuthContext.js","types/types.js","components/login/LoginScreen.js","data/heroes.js","components/heroes/HeroeCard.js","components/heroes/HeroesList.js","selectors/getHeroesByPublisher.js","components/marvel/MarvelScreen.js","components/ui/Navbar.js","components/heroes/HeroeScreen.js","selectors/getHeroeById.js","components/dc/DcScreen.js","components/search/SearchForm.js","hooks/useSimpleForm.js","components/search/SearchScreen.js","selectors/getHeroeByName.js","routers/DashboardRoutes.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","auth/authReducer.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","LoginScreen","history","dispatch","useContext","className","id","onClick","lastPath","localStorage","getItem","replace","type","payload","name","heroes","HeroeCard","heroe","superhero","alter_ego","first_appearance","characters","style","maxWidth","src","alt","to","HeroesList","publisher","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","MarvelScreen","Navbar","user","useHistory","activeClassName","exact","HeroeScreen","heroeId","useParams","find","length","push","goBack","DcScreen","SearchForm","initialState","useState","values","setValues","handleInputChange","target","value","useSimpleForm","handleSubmit","e","preventDefault","onSubmit","placeholder","onChange","autoComplete","SearchScreen","location","useLocation","queryString","parse","search","q","heroesFiltered","toLocaleLowerCase","getHeroByName","DashboardRoutes","path","component","PrivateRoute","isAuthenticated","Component","rest","setItem","pathname","props","PublicRoute","AppRouter","logged","authReducer","state","action","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.102f6f52.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext();","export const types = {\r\n    login: '(auth) login',\r\n    logout: '(auth) logout'\r\n}","import React, { useContext } from 'react';\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\nexport const LoginScreen = ({history}) => {\r\n    const {dispatch} = useContext(AuthContext);\r\n    const handleLogin = () => {\r\n        \r\n        const lastPath = localStorage.getItem('lastPath') || '/';\r\n        // history.push('/');\r\n        history.replace(lastPath); //Lo hacemos con replace para que no exista el login para volver atr√°s\r\n        \r\n        dispatch({\r\n            type: types.login,\r\n            payload: {\r\n                name: 'Jordi'\r\n            }\r\n        })\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1 id='login'>Login</h1>\r\n            <hr />\r\n\r\n            <button \r\n                className='btn btn-outline-info'\r\n                onClick={handleLogin}\r\n            >\r\n                Login\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const HeroeCard = ({heroe}) => {\r\n    const { \r\n        id,\r\n        superhero,\r\n        alter_ego,\r\n        first_appearance,\r\n        characters\r\n    } = heroe;\r\n\r\n    return (\r\n        <div className='col animate__animated fadeIn'>\r\n            <div className=\"card mb-3\" style={{maxWidth: 540}}>\r\n                <div className=\"row no-gutters\">\r\n                    <div className=\"col-md-4\">\r\n                        <img src={`./assets/heroes/${id}.jpg`} className=\"img-fluid rounded-start\" alt={superhero} />\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{superhero}</h5>\r\n                            <p className=\"card-text\">{alter_ego}</p>\r\n                            {\r\n                                (characters !== alter_ego)\r\n                                    && <p className='card-text'><small>{characters}</small></p>\r\n                            }\r\n                            <p className='card-text'><small className='text-muted'>{first_appearance}</small></p>\r\n\r\n                            <Link to={`./07-heroes-app/hero/${id}`}>\r\n                                M√°s...\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>    \r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher'\r\nimport { HeroeCard } from './HeroeCard';\r\n\r\nexport const HeroesList = ({publisher}) => {\r\n\r\n    const heroes = useMemo(() => getHeroesByPublisher( publisher ), [publisher])\r\n\r\n    // const heroes = getHeroesByPublisher( publisher );\r\n\r\n    return (\r\n        <div className='row row-cols-2 row-cols-md-3 g-4 animate__animated animate__fadeIn'>\r\n            {\r\n                heroes.map( hero => (\r\n                        <HeroeCard heroe={hero} key={hero.id}/>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesByPublisher = (publisher) => {\r\n    \r\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\r\n\r\n    if(!validPublishers.includes(publisher)){\r\n        throw new Error(`Publisher ${publisher} no es correcto`);\r\n    }\r\n\r\n    return heroes.filter( hero => hero.publisher === publisher);\r\n\r\n}","import React from 'react'\r\nimport { HeroesList } from '../heroes/HeroesList'\r\n\r\nexport const MarvelScreen = () => {\r\n    return (\r\n        <>\r\n            <h1>Marvel Heroes</h1>\r\n            <hr />\r\n            <HeroesList publisher='Marvel Comics' />\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Link, NavLink, useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../../auth/AuthContext'\r\nimport { types } from '../../types/types';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const {user, dispatch} = useContext(AuthContext);\r\n    const history = useHistory();\r\n\r\n    const handleLogout = () => {\r\n        \r\n        history.replace('/login');\r\n        dispatch({\r\n            type: types.logout\r\n        })\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark ps-2 pe-2\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/07-heroes-app\"\r\n            >\r\n                Heroes App\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/07-heroes-app/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/07-heroes-app/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName='active'\r\n                        className='nav-item nav-link'\r\n                        exact\r\n                        to='/07-heroes-app/search'\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ms-auto\">\r\n                    <span className='nav-item nav-link text-info' id='username'>\r\n                        {user.name}\r\n                    </span>\r\n                    <button \r\n                        className=\"nav-item nav-link btn\" \r\n                        onClick={handleLogout}\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React, { useMemo } from 'react'\r\nimport { Redirect, useParams } from 'react-router'\r\nimport { getHeroesById } from '../../selectors/getHeroeById';\r\n\r\nimport './heroeScreen.css';\r\n\r\nexport const HeroeScreen = ({history}) => {\r\n\r\n    const {heroeId} = useParams();\r\n\r\n    const hero = useMemo(() => getHeroesById(heroeId), [ heroeId ]);\r\n\r\n    // const hero = getHeroesById(heroeId);\r\n\r\n    if (!hero) {\r\n        return <Redirect to='/07-heroes-app' />;\r\n    }\r\n\r\n    const {\r\n        superhero,\r\n        publisher,\r\n        alter_ego,\r\n        first_appearance,\r\n        characters\r\n    } = hero;\r\n    \r\n    const handleReturn = () => {\r\n        \r\n        if(history.length <= 2){\r\n            if(publisher === 'DC Comics'){\r\n                history.push('/07-heroes-app/dc');\r\n            }else{\r\n                history.push('/07-heroes-app');\r\n            }\r\n        }else{\r\n            history.goBack();\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className='row mt-5'>\r\n            <div className='col-4'>\r\n                <img \r\n                    src={ `../assets/heroes/${heroeId}.jpg` }\r\n                    alt={superhero}\r\n                    className='img-thumbnail animate__animated animate__fadeInTopLeft' \r\n                    id='heroIMG'\r\n                />\r\n            </div>\r\n\r\n            <div className='col-8'>\r\n                <h3>{superhero}</h3>\r\n                <ul className='list-group list-group-flush'>\r\n                    <li className='list-group-item'><b> Alter ego: </b>  {alter_ego}</li>\r\n                    <li className='list-group-item'><b> Publisher: </b>  {publisher}</li>\r\n                    <li className='list-group-item'><b> First appearance: </b>  {first_appearance}</li>\r\n                </ul>\r\n\r\n                <h5 className='mt-2'>Characters:</h5>\r\n                <p className='text-muted ms-3'>{characters}</p>\r\n\r\n                <button \r\n                    className='btn btn-primary mt-5'\r\n                    onClick={handleReturn}\r\n                >\r\n                    Return\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesById = (id) => {\r\n\r\n    return heroes.find( hero => hero.id === id);\r\n\r\n}","import React from 'react'\r\nimport { HeroesList } from '../heroes/HeroesList'\r\n\r\nexport const DcScreen = () => {\r\n    return (\r\n        <>\r\n            <h1>DC Heroes</h1>\r\n            <hr />\r\n            \r\n            <HeroesList publisher='DC Comics' />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSimpleForm } from '../../hooks/useSimpleForm'\r\n\r\nexport const SearchForm = ({history}) => {\r\n\r\n    const [hero, handleInputChange] = useSimpleForm({name: ''})\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        history.push(`?q=${hero.name}`);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h4>Search your Hero</h4>\r\n            <hr />\r\n\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <input\r\n                    type='text'\r\n                    placeholder='Search a hero'\r\n                    className='form-control'\r\n                    value={hero.name}\r\n                    name='name'\r\n                    onChange={e => handleInputChange(e)}\r\n                    autoComplete='off'\r\n                />\r\n\r\n                <div className=\"d-grid gap-2 mt-1\">\r\n                    <button\r\n                        className=\"btn btn-outline-success\"\r\n                        type=\"submit\"\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                        Search\r\n                    </button>\r\n                </div>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import {useState} from 'react';\r\n\r\nexport const useSimpleForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( ) => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React, { useMemo } from 'react'\r\nimport queryString from 'query-string';\r\n\r\nimport { useLocation } from 'react-router';\r\nimport { getHeroByName } from '../../selectors/getHeroeByName';\r\nimport { HeroeCard } from '../heroes/HeroeCard';\r\nimport { SearchForm } from './SearchForm'\r\n\r\nexport const SearchScreen = ({history}) => {\r\n    const location = useLocation();\r\n    const { q = '' } = queryString.parse(location.search);\r\n\r\n    const heroesFiltered = useMemo(() => getHeroByName(q), [q]);\r\n\r\n    return (\r\n        <div>\r\n            <div className='row'>\r\n\r\n                <div className='col-5'>\r\n                    <SearchForm history={history} />\r\n                </div>\r\n\r\n                <div className='col-7'>\r\n                    <h4>Results</h4>\r\n                    <hr />\r\n\r\n                    {\r\n                        (q === '') &&\r\n                            <div className='alert alert-info'>\r\n                                Search a hero...\r\n                            </div>\r\n                    }\r\n\r\n                    {\r\n                        (q !== '' && heroesFiltered.length === 0) &&\r\n                            <div className='alert alert-danger'>\r\n                                There is no hero with: {q}\r\n                            </div>\r\n                    }\r\n\r\n                    {\r\n                    \r\n                        heroesFiltered.map(hero => (\r\n                            <HeroeCard key={hero.id}  heroe={hero} />\r\n                        ))\r\n\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {heroes} from '../data/heroes';\r\n\r\nexport const getHeroByName = (name = '') => {\r\n    // if(name === undefined){\r\n    //     return '';\r\n    // }else{\r\n    //     return heroes.find( hero => hero.superhero.toLocaleLowerCase() === name.toLocaleLowerCase() );\r\n    // }\r\n\r\n    if(name === ''){\r\n        return [];\r\n    }\r\n    return heroes.filter(hero => hero.superhero.toLocaleLowerCase().includes( name.toLocaleLowerCase() ));\r\n}","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router'\r\nimport { MarvelScreen } from '../components/marvel/MarvelScreen'\r\nimport { Navbar } from '../components/ui/Navbar'\r\nimport {HeroeScreen} from '../components/heroes/HeroeScreen';\r\nimport {DcScreen} from '../components/dc/DcScreen';\r\nimport { SearchScreen } from '../components/search/SearchScreen';\r\n\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n\r\n            <div className='container mt-2'>\r\n                <Switch>\r\n                    <Route exact path='/07-heroes-app/marvel' component={MarvelScreen} />\r\n                    <Route exact path='/07-heroes-app/hero/:heroeId' component={HeroeScreen} />\r\n                    <Route exact path='/07-heroes-app/dc' component={DcScreen} />\r\n                    <Route exact path='/07-heroes-app/search' component={SearchScreen} />\r\n\r\n                    <Redirect to='/07-heroes-app/marvel' />\r\n                </Switch>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {  \r\n\r\n    localStorage.setItem('lastPath', rest.location.pathname);\r\n\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component={(props) => (\r\n                (isAuthenticated)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to='/07-heroes-app/login' />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component= { (props) => (\r\n                (!isAuthenticated)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to='/07-heroes-app' />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\n\r\nimport {LoginScreen} from '../components/login/LoginScreen';\r\nimport { DashboardRoutes } from \"./DashboardRoutes\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const {user} = useContext(AuthContext);\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <PublicRoute \r\n                    path='/07-heroes-app/login' \r\n                    component={LoginScreen} \r\n                    isAuthenticated={user.logged} \r\n                />\r\n\r\n                <PrivateRoute\r\n                    isAuthenticated={user.logged} \r\n                    path='/07-heroes-app' \r\n                    component={DashboardRoutes} \r\n                />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                ...action.payload,\r\n                logged: true\r\n            }\r\n\r\n        case types.logout:\r\n            return {\r\n                logged: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useEffect, useReducer } from 'react'\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { AuthContext } from './auth/AuthContext';\r\nimport { authReducer } from './auth/authReducer';\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('user')) || {logged: false};\r\n}\r\n\r\nconst HeroesApp = () => {\r\n\r\n    const [user, dispatch] = useReducer(authReducer, {}, init)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('user', JSON.stringify(user))\r\n    }, [user])\r\n\r\n    return (       \r\n        <AuthContext.Provider value={{user, dispatch}}>\r\n            <AppRouter />\r\n        </AuthContext.Provider>        \r\n    )\r\n};\r\n\r\nexport default HeroesApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport HeroesApp from './HeroesApp';\r\n\r\nReactDOM.render(\r\n    <HeroesApp />\r\n    ,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}